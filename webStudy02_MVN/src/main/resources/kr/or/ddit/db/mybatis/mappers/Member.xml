<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.MemberDAO">

   <select id="selectMemberForAuth" parameterType="MemberVO"
      resultType="MemberVO">
      SELECT MEM_ID, MEM_PASS, MEM_NAME, MEM_MAIL
      FROM MEMBER
      WHERE MEM_ID = #{memId} AND MEM_DELETE IS NULL
   </select>

   <select id="selectMemberList" resultType="MemberVO">
      SELECT ROWNUM RNUM, A.*
      FROM(
      SELECT MEM_ID,MEM_NAME, MEM_HP
      , MEM_MAIL, MEM_MILEAGE, MEM_DELETE
      FROM MEMBER
      ORDER BY ROWID DESC
      ) A
   </select>
   <resultMap type="MemberVO" id="memberMap" autoMapping="true">
      <id property="memId" column="MEM_ID"/>
      <collection property="prodList" ofType="ProdVO" autoMapping="true">
         <id property="prodId" column="PROD_ID" />
      </collection>
   </resultMap>
   <select id="selectMember" parameterType="string" resultMap="memberMap">
      WITH CARTMEM AS(
         SELECT CART_MEMBER, CART_PROD
         FROM CART
      ), PRODMEM AS(
         SELECT CART_MEMBER
            , PROD_ID, PROD_NAME, PROD_LGU, PROD_BUYER
            , PROD_PRICE, PROD_COST
            , LPROD_NM
            , BUYER_NAME
         FROM CARTMEM INNER JOIN PROD ON (CART_PROD = PROD_ID)
         	INNER JOIN LPROD ON(PROD_LGU = LPROD_GU)
         	INNER JOIN BUYER ON(PROD_BUYER = BUYER_ID) 
      )
      SELECT
         MEM_ID, MEM_PASS, MEM_NAME,
         MEM_REGNO1, MEM_REGNO2,
         TO_CHAR(MEM_BIR, 'YYYY-MM-DD') MEM_BIR,
         MEM_ZIP, MEM_ADD1, MEM_ADD2,
         MEM_HOMETEL, MEM_COMTEL, MEM_HP,
         MEM_MAIL, MEM_JOB, MEM_LIKE,
         MEM_MEMORIAL, TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY,
         MEM_MILEAGE, MEM_DELETE
         , PROD_ID, PROD_NAME, PROD_LGU, PROD_BUYER
         , PROD_PRICE, PROD_COST
         , LPROD_NM
         , BUYER_NAME
      FROM MEMBER LEFT OUTER JOIN PRODMEM ON (MEM_ID = CART_MEMBER)
      WHERE MEM_ID = #{memId}
   </select>

   <delete id="deleteMember" parameterType="string">
      UPDATE MEMBER
      SET
      MEM_DELETE = '1'
      WHERE MEM_ID = #{memId}
   </delete>

   <update id="updateMember" parameterType="MemberVO">
      UPDATE MEMBER
      SET
      MEM_NAME = #{memName,jdbcType=VARCHAR},
      MEM_ZIP =
      #{memZip,jdbcType=CHAR},
      MEM_ADD1 = #{memAdd1,jdbcType=VARCHAR},
      MEM_ADD2 = #{memAdd2,jdbcType=VARCHAR},
      MEM_HOMETEL =
      #{memHometel,jdbcType=VARCHAR},
      MEM_COMTEL =
      #{memComtel,jdbcType=VARCHAR},
      MEM_HP = #{memHp,jdbcType=VARCHAR},
      MEM_MAIL = #{memMail,jdbcType=VARCHAR},
      MEM_JOB =
      #{memJob,jdbcType=VARCHAR},
      MEM_LIKE = #{memLike,jdbcType=VARCHAR},
      MEM_MEMORIAL = #{memMemorial,jdbcType=VARCHAR},
      MEM_MEMORIALDAY =
      TO_DATE(#{memMemorialday,jdbcType=DATE},'YYYY-MM-DD')
      WHERE MEM_ID =
      #{memId}
   </update>

   <insert id="insertMember" parameterType="MemberVO">
      INSERT INTO MEMBER
      (
      MEM_ID
      , MEM_PASS
      , MEM_NAME
      , MEM_REGNO1
      , MEM_REGNO2
      , MEM_BIR
      , MEM_ZIP
      ,
      aMEM_ADD1
      , MEM_ADD2
      , MEM_HOMETEL
      , MEM_COMTEL
      , MEM_HP
      , MEM_MAIL
      ,
      MEM_JOB
      , MEM_LIKE
      , MEM_MEMORIAL
      , MEM_MEMORIALDAY
      )
      VALUES
      (
      #{memId,jdbcType=VARCHAR},
      #{memPass,jdbcType=VARCHAR},
      #{memName,jdbcType=VARCHAR},
      #{memRegno1,jdbcType=CHAR},
      #{memRegno2,jdbcType=CHAR},
      TO_DATE(#{memBir,jdbcType=DATE}, 'YYYY-MM-DD'),
      #{memZip,jdbcType=CHAR},
      #{memAdd1,jdbcType=VARCHAR},
      #{memAdd2,jdbcType=VARCHAR},
      #{memHometel,jdbcType=VARCHAR},
      #{memComtel,jdbcType=VARCHAR},
      #{memHp,jdbcType=VARCHAR},
      #{memMail,jdbcType=VARCHAR},
      #{memJob,jdbcType=VARCHAR},
      #{memLike,jdbcType=VARCHAR},
      #{memMemorial,jdbcType=VARCHAR},
      TO_DATE(#{memMemorialday,jdbcType=DATE}, 'YYYY-MM-DD')
      )
   </insert>
</mapper>