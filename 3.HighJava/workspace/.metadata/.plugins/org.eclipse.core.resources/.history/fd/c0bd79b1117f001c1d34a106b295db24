package kr.or.ddit.basic.fileupload;

import java.io.File;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/*
	
	- Servlet 3.0 이상에서는 파일 업로드를 하려면 서블릿에 @MultipartConfig 어노테이션을
	   설정해야 한다.
	- @MultipartConfig 어노테이션에서 설정할 변수들...
	  1) location : 업로드한 파일이 임시적으로 저장될 경로 지정(기본값 : "")
	  2) fileSizeThreshold : 이 곳에 지정한 값보다 큰 파일이 전송되면 location에 지정한
	  						  임시 디렉토리에 저장한다. (단위 : byte, 기본값 : 0 (무조건 임시 디렉토리 사용)
	  3) maxFileSize : 1개 파일의 최대 크기 (단위 : byte, 기본값 : -1L(무제한)
	  4) maxRequestSize : 서버로 전송되는 request데이터 전체의 최대 크기
	  						(모든 파일 크기 + formData) (단위 : byte, 기본값 : -1L(무제한)
	  
	
*/


@WebServlet("/fileUploadServlet.do")
@MultipartConfig(
	fileSizeThreshold = 1024 * 1024 * 10, maxFileSize = 1024 * 1024 * 30,
	maxRequestSize = 1024 * 1024 * 100
		
)

public class FileUploadServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 업로드된 파일들이 저장될 폴더 설정
		String uploadPath = "d:/d_other/uploadFiles";
		
		// 저장될 폴더가 없으면 새로 만들어 놓는다.
		File f = new File(uploadPath);
		if(!f.exists()) {
			f.mkdirs();
		}
	}

}

