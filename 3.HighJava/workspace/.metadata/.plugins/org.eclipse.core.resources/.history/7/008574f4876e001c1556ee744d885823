package kr.or.ddit.basic.tcp;

import java.io.DataOutputStream;
import java.net.Socket;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class TcpMultiChatServer {
	// 접속한 정보를 저장할 Map
	//			==> key값 : 접속한 사람의 이름, value값 : 접속한 클라이언트의 Socket객체
	private Map<String, Socket> clientMap;
	
	
	public TcpMultiChatServer() {
		// clientMap을 동기화 처리가 되도록 생성한다
		clientMap = Collections.synchronizedMap(new HashMap<>());
		
	}

	public static void main(String[] args) {
		new TcpMultiChatServer().serverStart();

	}
	
	//시작하는 메서드
	public void serverStart() {
		
	}
	
	// clientMap에 저장된 모든 사용자에게 메시지를 전송하는 메서드
	private void sendToAll(String msg) {
		// clientMap의 데이터 개수만큼 반복처리
		for(String name : clientMap.keySet()){
			try {
				DataOutputStream dos = new DataOutputStream(
						clientMap.get(name).getOutputStream());
				dos.writeUTF(msg);
						
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
	} //sendToAll()메서드 끝
	
}
